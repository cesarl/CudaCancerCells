#version 430 core

layout(std430, binding = 1) buffer Pr
{
	vec4 Pressure[ ];
};

layout(std430, binding = 2) buffer GCnt
{
	uint GridCounter[ ];
};

layout(std430, binding = 3) buffer Gr
{
	uint Grid[ ];
};

layout(std430, binding = 4) buffer De
{
	float Density[ ];
};

layout(std430, binding = 5) buffer Vel
{
	vec4 Velocity[ ];
};

layout(std430, binding = 6) buffer For
{
	vec4 Force[ ];
};

layout (local_size_x = 128, local_size_y = 1, local_size_z = 1) in;

uniform float Time;
 
void main()
{
	uint gid = gl_GlobalInvocationID.x;

	Force[gid].xyz = Pressure[gid].xyz / Density[gid];
	Velocity[gid].xyz += Time * vec3(Force[gid].xyz);
}